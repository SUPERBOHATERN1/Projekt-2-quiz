{"version":3,"sources":["src/components/playerHuman/playerHuman.js","src/components/playerCPU/playerCPU.js","src/components/questionToAnswer/getRightSelector.js","src/components/questionToAnswer/questionToAnswer.js","src/components/starshipsAndVehicles.js","src/components/localStorage/localStorage.js","src/components/modalWindow/importResultsFuntion.js","src/components/modalWindow/modalWindowContent.js","src/components/modalWindow/modalWindow.js","src/components/loader/loader.js","src/components/generateQuestion/generateQuestion.js","src/components/gameRules/gameRules.js","src/components/gameRules/gameRulesText.js","src/components/question/question.js","src/components/question/questionText.js","src/components/hallOfFame/hallOfFame.js","src/components/hallOfFame/hallOfFameText.js","src/components/imgContainer/img.js","src/components/imgContainer/imgSrc.js","src/components/modeChange/modeChange.js","src/components/buttons/rulesBtn.js","src/components/buttons/hallOfFameBtn.js","src/components/redButton/redButton.js","src/components/logoStarWars/logo.js","src/components/mainMenu/mainMenu.js","src/app/App.js","src/index.js"],"names":["PlayerHuman","allAnswer","rightAnswer","playerAnswer","allPlayerAnswers","click","push","calFn","playerHuman","playerUpdate","e","callFn","playerChose","target","innerHTML","answerCounter","PlayerCPU","noOfAnswers","correctAnswers","answer","allImageArr","allCpuAnswers","allCorrectAnswers","arrWithAns","question","cpuAnswer","Math","floor","random","image","cpu","getRightSelector","rulesSelector","document","querySelector","HoFameSelector","questionToAnswer","answersObj","allAnswers","answers","img","checkedAnswer","checkAnswer","className","setAttribute","divsWithAnswers","querySelectorAll","i","length","addEventListener","choicedAnswer","cpuAns","addDataToArrays","setTimeout","vehiclesArrayImg","starshipArrayImg","getDefaultRanking","people","nick","vehicles","starships","modifyStorage","mode","pNick","pCorrectAnswers","pAnswers","rankingValues","JSON","parse","localStorage","getItem","toLowerCase","console","log","sort","a","b","splice","setItem","stringify","resultsWindow","playerCPU","allImages","allHumanAnswers","allCPUAnswers","fullDiv","createElement","summaryDiv","correctAnswerImage","src","correctAnswerElement","innerText","humanAnswerElement","computerAnswerNameElement","appendChild","modalWindowContent","gameOver","title","text","results","resultTitle","superAnswer","style","color","superAnswerHeader","superAnswerBody","resultsxd","yoda","inputTry","id","labelTry","player","type","minLength","maxLength","required","htmlFor","fillName","btn","value","preventDefault","playerObject","yourInput","input","getElementById","obj","Object","playerCorrect","playerAll","objReturn","body","shadowRoot","location","reload","superDiv","modalWindow","timerComponent","template","StarWarsTimer","HTMLElement","attachShadow","content","cloneNode","time","sec","min","count","countdown","setInterval","clearInterval","window","timer","customElements","define","generadeRandomQuestions","urlPeopleRequest","urlVehiclesRequest","urlStarshipsRequest","arrayIds","num","idArray","randomId","data","randomizator","rndArrayOfIds","arr","arr2","includes","getImg","imgQuestion","getNames","basicUrl","Promise","all","map","fetch","response","json","fullObject","name","names","createPeopleObject","url","questions","fourAnswers","responsePeople","numOfRes","apiIds","rndIds","correctAns","namesArr","indexOf","createStarshipsObject","createVehiclesObject","checkMode","getGameMode","currentMode","trigger","then","answerQuestion","gameRules","divRulesContainer","divRules","icon","modeRules","modeText","createTextNode","rulesText","gameQuestion","divQuestion","pQuestion","questionText","showHallOfFame","fameContainer","classList","add","pFame","ranking","getCurrentMode","fameText","divImg","imgSrc","modeChange","modeChangeComponent","modes","forEach","remove","gameRulesContainer","questionContainer","imageContainer","hallOfFameContainer","replaceChild","rulesButton","hallOfFameButton","yellowButtonContainer","redButton","redButtonContainer","redButtonText","logo","divLogo","imgLogo","mainMenu","App","options","playGameButton","lastElementChild","yellowButton","restoreDefault","ONE_SECOND_MILLIS","SW_API_BASE_URL","QUIZ_MAX_TIME","onload","swApiBaseUrl","quizMaxTime"],"mappings":"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","file":"src.e2bcb4b1.js","sourceRoot":"..","sourcesContent":["class PlayerHuman {\n  constructor() {\n    this.allAnswer = 0;\n    this.rightAnswer = 0;\n    this.playerAnswer = '';\n    this.allPlayerAnswers = [];\n  }\n\n  playerChose(click) {\n    this.playerAnswer = click;\n    this.allPlayerAnswers.push(this.playerAnswer);\n  }\n\n  answerCounter(calFn) {\n    const correctAns = calFn;\n    if (correctAns) {\n      this.rightAnswer++;\n      this.allAnswer++;\n    } else {\n      this.allAnswer++;\n    }\n  }\n\n  restoreDefault() {\n    this.allAnswer = 0;\n    this.rightAnswer = 0;\n    this.playerAnswer = '';\n    this.allPlayerAnswers = [];\n  }\n}\n\nconst playerHuman = new PlayerHuman();\n\nfunction playerUpdate(e, callFn) {\n  playerHuman.playerChose(e.target.innerHTML);\n  playerHuman.answerCounter(callFn);\n  // console.log(playerHuman);\n  return playerHuman;\n}\n\nexport { playerUpdate, PlayerHuman, playerHuman };\n","class PlayerCPU {\n    constructor() {\n        this.noOfAnswers = 0;\n        this.correctAnswers = 0;\n        this.answer = '';\n        this.allImageArr = [];\n        this.allCpuAnswers = [];\n        this.allCorrectAnswers = [];\n    }\n\n    answerQuestion(arrWithAns) {\n        const question = [...arrWithAns];\n        const cpuRandomPicked = Math.floor(Math.random()*4);\n        const cpuAnswer = question[cpuRandomPicked];;\n        this.answer = cpuAnswer;\n        return this.answer;\n    }\n\n    addDataToArrays(image, correctAnswers) {\n        this.allImageArr.push(image);\n        this.allCpuAnswers.push(this.answer);\n        this.allCorrectAnswers.push(correctAnswers);\n    }\n\n    restoreDefault() {\n        this.noOfAnswers = 0;\n        this.correctAnswers = 0;\n        this.answer = '';\n    }\n}\n\nconst cpu = new PlayerCPU();\n\nexport { cpu };","\nexport const getRightSelector = () => {\n    const rulesSelector = document.querySelector('.rules');\n    const HoFameSelector = document.querySelector('.fame-container');\n\n    if(rulesSelector) {\n        return rulesSelector;\n    }\n    return HoFameSelector;\n}","// import generadeRandomQuestions from '../generateQuestion/LocalGenerateQuestion';\nimport generadeRandomQuestions from '../generateQuestion/generateQuestion.js';\nimport { playerUpdate } from '../playerHuman/playerHuman.js';\nimport { cpu } from '../playerCPU/playerCPU.js';\nimport { getRightSelector } from './getRightSelector.js';\n\nconst questionToAnswer = (answersObj) => {\n  const allAnswers = answersObj.answers;\n  const rightAnswer = answersObj.rightAnswer;\n  const img = answersObj.image;\n  let checkedAnswer = false;\n\n  const checkAnswer = (answer) => {\n    if (rightAnswer === answer.innerHTML) {\n      checkedAnswer = true;\n      answer.className += ' corectAnswer';\n    } else {\n      answer.className += ' wrongAnswer';\n    }\n    return checkedAnswer;\n  };\n\n  const checkCPUAnswer = (cpuAns) => {\n    if (rightAnswer === cpuAns) {\n      cpu.correctAnswers += 1;\n      cpu.noOfAnswers += 1;\n    } else {cpu.noOfAnswers += 1;}\n    cpu.addDataToArrays(img, rightAnswer);\n    // console.log(cpu);\n    return;\n  };\n\n  getRightSelector().innerHTML = `\n    <style>\n      .questions{\n          width: 90%;\n          height: 50%;\n          display:grid;\n          grid-template-columns: 1fr 1fr;\n          justify-items: center;\n          grid-gap:10%;\n      }\n      .questions_item{\n          color: white;\n          font-size: 1.5em;\n          display:flex;\n          padding:10px 20px;\n          border:1px solid white;\n          border-radius:10px;\n          justify-self: stretch;\n          justify-content: center;\n          text-align:center;\n          align-items: center;\n          align-self: center;\n      }\n      @media only screen and (min-device-width: 320px) and (max-device-width: 480px){\n        .questions {\n          grid-gap: 4%;\n          height: 100%;\n          padding:3px 20px;\n          grid-template-columns: 1fr;\n          font-size: .7em;\n        }\n    </style>\n\n    <div class=\"questions\">\n      <div class=\"questions_item\">${allAnswers[0]}</div>\n      <div class=\"questions_item\">${allAnswers[1]}</div>\n      <div class=\"questions_item\">${allAnswers[2]}</div>\n      <div class=\"questions_item\">${allAnswers[3]}</div>\n    </div>\n    <br>\n\n    `;\n\n  const imga = document.querySelector(\".img-container > img\");\n  imga.setAttribute('src',`../../../../Projekt-2-quiz/static/assets/img/modes/${img}` );\n\n  //   <div>\n\n  //   <img src=\"../../../static/assets/img/modes/${img}\">\n  // </div>\n\n  //podmień img dla wersji lokalnej\n  {\n    /* <img src=\"../../../static/assets/img/modes/all/${img}\"></img> */\n  }\n\n  const divsWithAnswers = document.querySelectorAll('.questions_item');\n  \n  for (let i = 0; i < divsWithAnswers.length; i++) {\n    divsWithAnswers[i].addEventListener('click', function (e) {\n      \n      let choicedAnswer = e.target;\n      checkAnswer(choicedAnswer);\n      checkCPUAnswer(cpu.answer);\n      //tutaj Update dla gracza player\n      playerUpdate(e, checkAnswer(choicedAnswer));\n      setTimeout(function () {\n        generadeRandomQuestions();\n      }, 100);\n    });\n  }\n};\n\nexport default questionToAnswer;\n","export const vehiclesArrayImg = [\n    4,\n    6,\n    7,\n    8,\n    14,\n    16,\n    18,\n    19,\n    20,\n    24,\n    25,\n    26,\n    30,\n    33,\n    34,\n    35,\n    36,\n    37,\n    38,\n    42,\n];\nexport const starshipArrayImg = [\n    5,\n    9,\n    10,\n    11,\n    12,\n    13,\n    15,\n    21,\n    22,\n    23,\n    27,\n    28,\n    29,\n    31,\n    39,\n    40,\n    41,\n    43,\n    47,\n    48,\n];","function getDefaultRanking(){\n    return {\n        people: [{nick: 'Ania', correctAnswers: 19, answers: 20}, {nick: 'Mateusz', correctAnswers: 14, answers: 30}, {nick: 'Leia Organa', correctAnswers: 1, answers: 23}],\n        vehicles: [{nick: 'Adam', correctAnswers: 16, answers: 19}, {nick: 'Ania', correctAnswers: 15, answers: 20}, {nick: 'Krystian', correctAnswers: 5, answers: 20}],\n        starships: [{nick: 'Ania', correctAnswers: 17, answers: 17}, {nick: 'Jakub', correctAnswers: 14, answers: 20}, {nick: 'Mateusz', correctAnswers: 11, answers: 20}]\n    }\n}\n\nfunction modifyStorage(mode, pNick, pCorrectAnswers, pAnswers){\n    \n    let rankingValues = JSON.parse(localStorage.getItem('ranking')) || getDefaultRanking();\n\n    rankingValues[mode.toLowerCase()].push({nick: pNick, correctAnswers: pCorrectAnswers, answers: pAnswers});\n    console.log(rankingValues[mode.toLowerCase()])\n    rankingValues[mode.toLowerCase()].sort((a, b) => {\n        if(a.correctAnswers<b.correctAnswers) return 1;\n        if(a.correctAnswers>b.correctAnswers) return -1;\n\n        if(a.correctAnswers==b.correctAnswers){\n            if(a.answers<b.answers) return -1;\n            if(a.answers>b.answers) return 1;\n        }\n\n        return 0;\n    });\n    \n    rankingValues[mode.toLowerCase()].splice(3, 1);\n\n    localStorage.setItem('ranking', JSON.stringify(rankingValues)); \n}\n\n\n// modifyStorage('people', 'Jan', 100, 100)\n\nexport default getDefaultRanking; \nexport {modifyStorage};\n\n","function resultsWindow (playerCPU, playerHuman) {\n\nlet allAnswers = playerCPU.allCorrectAnswers;\nlet allImages = playerCPU.allImageArr;\nlet allHumanAnswers = playerHuman.allPlayerAnswers;\nlet allCPUAnswers = playerCPU.allCpuAnswers;\n\nlet fullDiv = document.createElement(\"div\");\n\nfor (let i = 0; i < allAnswers.length; i++) {\n\n    let summaryDiv = document.createElement(\"div\");\n\n    const correctAnswerImage = document.createElement(\"img\");\n    correctAnswerImage.src = `../../../../Projekt-2-quiz/static/assets/img/modes/${allImages[i]}`;\n\n    const correctAnswerElement = document.createElement(\"p\");\n    correctAnswerElement.innerText = allAnswers[i];\n    correctAnswerElement.className = \"answers-correct-right\"\n\n    const humanAnswerElement = document.createElement(\"p\");\n    humanAnswerElement.innerText = allHumanAnswers[i];\n    humanAnswerElement.className = (allHumanAnswers[i] === allAnswers[i]) ? \"answers-table-correct\" : \"answers-table-incorrect\";\n\n    const computerAnswerNameElement = document.createElement(\"p\");\n    computerAnswerNameElement.innerText = allCPUAnswers[i];\n    computerAnswerNameElement.className = (allCPUAnswers[i] === allAnswers[i]) ? \"answers-table-correct\" : \"answers-table-incorrect\";\n\n    summaryDiv.appendChild(correctAnswerImage);\n    summaryDiv.appendChild(correctAnswerElement);\n    summaryDiv.appendChild(humanAnswerElement);\n    summaryDiv.appendChild(computerAnswerNameElement);\n\n    fullDiv.appendChild(summaryDiv);\n}\nreturn fullDiv;\n\n}\n\nexport default resultsWindow;","import getDefaultRanking from '../localStorage/localStorage.js';\nimport {modifyStorage} from '../localStorage/localStorage.js';\nimport resultsWindow from './importResultsFuntion.js';\n\nfunction modalWindowContent(playerCPU, playerHuman){\n\n    //GAME OVER DIV\n    const gameOver = document.createElement(\"div\");\n    gameOver.className = \"game-over\";\n\n    const title = document.createElement(\"h1\");\n    title.className = \"game-over\";\n    title.innerHTML = \"GAME OVER\";\n    gameOver.appendChild(title);\n\n    const text = document.createElement(\"p\");\n    text.className = \"game-over\";\n    text.innerHTML = `The force is strong in you young Padawan! During 1 minute you have answered ${playerHuman.rightAnswer} / ${playerHuman.allAnswer} questions. And AI quessed ${playerCPU.correctAnswers} / ${playerCPU.noOfAnswers}.`\n    gameOver.appendChild(text);\n\n\n    //RESULTS TABLE DIV\n    const results = document.createElement(\"div\");\n    results.className = \"results\";\n\n    const resultTitle = document.createElement(\"h2\");\n    resultTitle.innerHTML = \"Detailed answers\"\n    results.appendChild(resultTitle);\n\n    const superAnswer = document.createElement(\"div\");\n    superAnswer.className = \"super-answer\";\n    superAnswer.style.color = \"white\";\n    results.appendChild(superAnswer);\n\n    const superAnswerHeader = document.createElement(\"div\");\n    superAnswerHeader.className = \"super-answer-header\";\n    superAnswer.appendChild(superAnswerHeader);\n\n    superAnswerHeader.innerHTML = `\n    <p></p>\n    <p>Correct</p>\n    <p>You</p>\n    <p>Computer</p>\n    `;\n\n    const superAnswerBody = document.createElement(\"div\");\n    superAnswerBody.className = \"super-answer-body\";\n    superAnswer.appendChild(superAnswerBody);\n\n    //function initialized with dummy\n    let resultsxd = resultsWindow(playerCPU, playerHuman);\n\n    superAnswerBody.appendChild(resultsxd);\n\n    //YODA PICTURE DIV\n    const yoda = document.createElement(\"img\");\n    yoda.className = \"yoda\";\n    const src = \"../../../../Projekt-2-quiz/static/assets/ui/MasterYodaLeft.png\";\n    yoda.setAttribute('src', src);\n\n\n    // STUPID NOT WORKING DIV WITH FORM INPUT AND A BUTTON // ok it works now, we're cool\n    \n    //FORM\n    const inputTry = document.createElement(\"form\");\n    inputTry.id = \"inputTry\";\n\n    const labelTry = document.createElement(\"label\");\n\n    const player = document.createElement(\"input\");\n    player.type = \"text\";\n    player.minLength = \"2\";\n    player.maxLength = \"20\";\n    player.id = \"player-input\"\n    player.required = \"required\";\n    \n    labelTry.appendChild(player);\n    labelTry.htmlFor = \"player-input\";\n    \n    const fillName = document.createElement(\"div\");\n    fillName.className = \"fill-name\";\n    fillName.innerHTML = \"Please fill your name in order to receive eternal glory in the whole Galaxy!\";\n    \n    labelTry.appendChild(fillName);\n    inputTry.appendChild(labelTry);\n\n    //BUTTON\n    const btn = document.createElement(\"input\");\n    btn.value = \"MAY THE FORCE BE WITH YOU\";\n    btn.type = \"submit\";\n    btn.className = \"force-button\";\n\n    inputTry.appendChild(btn);\n\n    //FUNCTIONALITY WITH FORM & LOCAL STORAGE\n\n    const objReturn = () =>  {\n        let yourInput = document.getElementById('player-input');\n        let input = yourInput.value;\n        let obj = new Object();\n        \n        if (input.length >= 2) {\n            obj.nick = input;\n            obj.playerCorrect = playerHuman.rightAnswer;\n            obj.playerAll = playerHuman.allAnswer;\n        } else {\n            throw \"Please enter a correct value!\"\n        }\n\n        console.log(obj);\n        return obj;\n    }\n\n    const returnToMainPage = () => {\n        location.reload();\n    }\n\n\n    btn.addEventListener('click', (e) => {\n        e.preventDefault();\n        const playerObject = objReturn();\n        const mode = document.body.querySelector(\"mode-change\").shadowRoot.querySelector(\".dark\").innerHTML;\n        returnToMainPage();\n\n         // HALLOFFAME LOCALSTORAGE\n        let pNick = playerObject.nick;\n        let pCorrectAnswers = playerObject.playerCorrect;\n        let pAnswers = playerObject.playerAll;\n        modifyStorage(mode, pNick, pCorrectAnswers, pAnswers);\n     })\n\n\n\n    //BRINGING IT ALL TOGETHER\n    const superDiv = document.createElement(\"div\");\n    superDiv.className = \"superDiv\";\n    superDiv.appendChild(gameOver);\n    superDiv.appendChild(results);\n    superDiv.appendChild(yoda);\n    superDiv.appendChild(inputTry);\n\n    return superDiv;\n}\n\nexport default modalWindowContent;","import modalWindowContent from './modalWindowContent.js';\n\nexport function modalWindow (playerCPU, playerHuman) {   \n\n    const modalWindow = document.createElement(\"div\");\n    modalWindow.className = \"modal-window\";\n\n    modalWindow.appendChild(modalWindowContent(playerCPU, playerHuman));\n\n    return modalWindow;\n}\n\n// const window = document.body.appendChild(modalWindow(playerCPU1, playerHuman1));\n// export default modalWinodow;\n","import { cpu } from '../playerCPU/playerCPU.js';\nimport { playerHuman } from '../playerHuman/playerHuman.js';\nimport { modalWindow } from '../modalWindow/modalWindow.js';\nconst timerComponent = () => {\n  const template = document.createElement('template');\n  template.innerHTML = `\n  <style>\n  .hider {\n   display: block;\n   width: 100%;\n   height: 20px;\n   background-color: white;\n   border-radius: 20px;\n   box-shadow: 0px 0px 10px 10px #fa250e;\n   animation: slider 60s linear;\n   animation-play-state: running;\n   animation-fill-mode: forwards;\n}\n\n@keyframes slider {\n   0% {\n      width: 100%\n   }\n\n   100% {\n      width: 0;\n   }\n}\n\n@media only screen and (max-width: 812px) and (orientation: landscape) {\n  .hider, .lighstaberHandler, .lightsaberColor{\n    display: none;\n  }\n}\n\n@media only screen and (min-device-width: 320px) and (max-device-width: 480px) and (orientation: portrait) {\n  .hider, .lighstaberHandler, .lightsaberColor{\n    display: none;\n  }\n}\n  </style>\n  <div part=\"loader\">\n      <div part='lightsaber'>\n\n         <img part='lighstaberHandler' class = 'lighstaberHandler' src=\"../../../../Projekt-2-quiz/static/assets/ui/LightsaberHandle.png\">\n\n         <div part='lightsaberColor' class = 'lightsaberColor'>\n            <span part='hider' class = 'hider'></span>\n         </div>\n      </div>\n      <div part='counter'>\n         <p part='countdown-text' class = 'countdown-text'></p>\n         <span part= 'timer' class = 'timer'>: 1m 00s</span>\n      </div>\n  `;\n  class StarWarsTimer extends HTMLElement {\n    constructor() {\n      super();\n\n      this.attachShadow({ mode: 'open' });\n      this.shadowRoot.appendChild(template.content.cloneNode(true));\n      this.shadowRoot.querySelector('.lighstaberHandler').src =\n        '../../../../Projekt-2-quiz/static/assets/ui/LightsaberHandle.png';\n      this.shadowRoot.querySelector('.lightsaberColor');\n      this.shadowRoot.querySelector('.countdown-text').innerText = `Time Left `;\n    }\n    timer() {\n      let time = 60;\n      let sec = time;\n      let min = 1;\n      const count = this.shadowRoot.querySelector('.timer');\n      const countdown = setInterval(function () {\n        sec--;\n        if (sec === time) {\n          count.innerText = `: ${min}m 00s`;\n        } else if (sec !== time) {\n          min = 0;\n          count.innerText = `: ${min}m ${sec}s`;\n        }\n        //trzeba naprawić skaczący tekst oraz dodać minuty\n        if (sec < 0) {\n          count.innerText = `: ${min}m 0s`;\n          clearInterval(countdown);\n          count.innerText = `: your time is up, young Padawan!`;\n          const window = document.body.appendChild(modalWindow (cpu, playerHuman));\n\n          //zaimportowane obiekty playerHuman i cpu - z nich wzięlismy\n          // properties zwracające wszystkie poprawne odpowiedzi (dla człowieka\n          //rightAnswer, dla cpu - correctAnswer) oraz wszystkie odpowiedzi (człowiek allAnswer, cpu - noOfAnswers)\n\n          // alert(`Twój wynik to: ${playerHuman.rightAnswer}/${playerHuman.allAnswer}, a komputera: ${cpu.correctAnswers}/${cpu.noOfAnswers}`);\n        }\n      }, 1000);\n    }\n    connectedCallback() {\n      window.addEventListener('load', this.timer());\n    }\n  }\n  window.customElements.define('star-wars-loader', StarWarsTimer);\n};\n\nexport { timerComponent };\n","// import 'regenerator-runtime/runtime'; //async/await with Parcel\nimport questionToAnswer from '../questionToAnswer/questionToAnswer.js';\nimport { cpu } from '../playerCPU/playerCPU.js';\nimport { vehiclesArrayImg, starshipArrayImg } from '../starshipsAndVehicles.js';\nimport { timerComponent } from '../loader/loader.js';\n\nconst urlPeopleRequest = 'https://swapi.dev/api/people/';\nconst urlVehiclesRequest = 'https://swapi.dev/api/vehicles/';\nconst urlStarshipsRequest = 'https://swapi.dev/api/starships/';\n\nexport const arrayIds = (num) => {\n  const idArray = [];\n  for (let i = 1; idArray.length < num; i++) {\n    if (i !== 17) {\n      idArray.push(i);\n    } else {\n      continue;\n    }\n  }\n  return idArray;\n};\nexport const randomId = (data) => {\n  const randomizator = Math.floor(Math.random() * (data.length - 1) + 1);\n  return randomizator;\n};\nexport const rndArrayOfIds = (arr, arr2) => {\n  while (arr.length < 4) {\n    let id = arr2[randomId(arr2)];\n    if (!arr.includes(id)) {\n      arr.push(id);\n    }\n  }\n  return arr;\n};\n\nexport const getImg = (mode, id) => {\n  const imgQuestion = `${mode}/${id}.jpg`;\n  return imgQuestion;\n};\n\nasync function getNames(arr, basicUrl) {\n  const names = await Promise.all(\n    arr.map(async (num) => {\n      const response = await fetch(basicUrl + num + '/');\n      const fullObject = await response.json();\n      return fullObject.name;\n    }),\n  );\n  return names;\n}\n\nasync function createPeopleObject(url) {\n  const mode = 'people';\n  const questions = {\n    image: '',\n    answers: [],\n    rightAnswer: '',\n  };\n  let data;\n  let numOfRes;\n  let fourAnswers = [];\n  try {\n    const responsePeople = await fetch(url);\n    data = await responsePeople.json();\n    numOfRes = data.count;\n    const apiIds = arrayIds(numOfRes);\n    const rndIds = rndArrayOfIds(fourAnswers, apiIds);\n    const correctAns = rndIds[Math.floor(Math.random() * rndIds.length)];\n    const namesArr = await getNames(rndIds, url);\n    questions.answers = namesArr;\n    questions.rightAnswer = namesArr[rndIds.indexOf(correctAns)];\n    questions.image = getImg(mode, correctAns);\n    // console.log(questions);\n    return questions;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nasync function createStarshipsObject(url) {\n  const mode = 'starships';\n  const questions = {\n    image: '',\n    answers: [],\n    rightAnswer: '',\n  };\n  let fourAnswers = [];\n  try {\n    const apiIds = starshipArrayImg;\n    const rndIds = rndArrayOfIds(fourAnswers, apiIds);\n    const correctAns = rndIds[Math.floor(Math.random() * rndIds.length)];\n    const namesArr = await getNames(rndIds, url);\n    questions.answers = namesArr;\n    questions.rightAnswer = namesArr[rndIds.indexOf(correctAns)];\n    questions.image = getImg(mode, correctAns);\n    // console.log(questions);\n    return questions;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nasync function createVehiclesObject(url) {\n  const mode = 'vehicles';\n  const questions = {\n    image: '',\n    answers: [],\n    rightAnswer: '',\n  };\n  let fourAnswers = [];\n  try {\n    const apiIds = vehiclesArrayImg;\n    const rndIds = rndArrayOfIds(fourAnswers, apiIds);\n    const correctAns = rndIds[Math.floor(Math.random() * rndIds.length)];\n    const namesArr = await getNames(rndIds, url);\n    questions.answers = namesArr;\n    questions.rightAnswer = namesArr[rndIds.indexOf(correctAns)];\n    questions.image = getImg(mode, correctAns);\n    // console.log(questions);\n    return questions;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport function checkMode(mode) {\n  switch (mode.toLowerCase()) {\n    case 'people':\n      return createPeopleObject(urlPeopleRequest);\n    case 'vehicles':\n      return createVehiclesObject(urlVehiclesRequest);\n    case 'starships':\n      return createStarshipsObject(urlStarshipsRequest);\n  }\n}\n\n\nconst getGameMode = () => {\n  const mode = document.querySelector(\"mode-change\");\n  return mode.currentMode;\n}\n\n\n\nfunction generadeRandomQuestions(trigger) {\n  // startuje funkcję z wybranego 'mode' wraz z wylosowanymi pytaniami. Obiekt przekazywany w argumencie.\n  checkMode(getGameMode()).then((e) => {\n    cpu.answerQuestion(e.answers);\n    // funkcja wyswietla odpowiedzi na stronie\n    questionToAnswer(e);\n    if(trigger){\n      timerComponent();\n    }\n  });\n}\nexport default generadeRandomQuestions;\n","function gameRules(text) {\n\n    const divRulesContainer = document.createElement(\"div\");\n    divRulesContainer.className = \"rules\";\n\n    const divRules = document.createElement(\"div\");\n    divRules.id = \"gameRules\";\n    divRules.innerHTML = text;\n\n    const icon = document.createElement(\"img\");\n    const src = \"../../../../Projekt-2-quiz/static/assets/ui/graduation-cap-solid.svg\";\n    icon.setAttribute('src', src);\n    icon.id = 'iconRules';\n\n    const modeRules = document.createElement(\"div\");\n    modeRules.id = \"modeRules\";\n    const modeText = document.createTextNode(\"Mode Rules\");\n    modeRules.appendChild(icon);\n    modeRules.appendChild(modeText);\n\n    divRulesContainer.appendChild(modeRules);\n    divRulesContainer.appendChild(divRules);\n    return divRulesContainer;\n}\n\nexport default gameRules;","const rulesText = {\n    people: \"You have one minute (1m) to answer as many questions as possible. During the game you need to select what character from Star Wars is showed in the picture (Jar Jar Binks right now).\",\n    vehicles: \"You have one minute (1m) to answer as many questions as possible. During the game you need to select what vehicle from Star Wars is showed in the picture.\",\n    starships: \"You have one minute (1m) to answer as many questions as possible. During the game you need to select what starship from Star Wars is showed in the picture.\"\n}\n\nexport default rulesText;","function gameQuestion(text) {\n\n    const divQuestion = document.createElement(\"div\");\n    divQuestion.className = \"title\";\n\n    const pQuestion = document.createElement(\"p\");\n    pQuestion.id = \"question\"\n    pQuestion.innerHTML = text;\n\n    divQuestion.appendChild(pQuestion);\n\n    return divQuestion;\n};\n\nexport default gameQuestion;","const questionText = {\n    people: \"Who is this character?\",\n    vehicles: \"Do you recognize this vehicle?\",\n    starships: \"Do you recognize this starship?\"\n}\n\nexport default questionText;","import getDefaultRanking from '../localStorage/localStorage.js';\n\nfunction showHallOfFame(text){\n\n    const fameContainer = document.createElement('div');\n    fameContainer.classList.add('fame-container')\n    \n    const pFame = document.createElement('p');\n    pFame.classList.add('fame-paragraph')\n    pFame.innerText = text;\n\n    fameContainer.appendChild(pFame);\n\n    const ranking = document.createElement('div');\n    ranking.classList.add('ranking');\n    \n    const mode = document.querySelector('mode-change').getCurrentMode();\n    const rankingValues = JSON.parse(localStorage.getItem('ranking')) || getDefaultRanking();\n    \n    ranking.innerHTML = `\n        <ul>\n            <li class=\"bold\">Place</li>\n            <li>1st</li>\n            <li>2nd</li>\n            <li>3rd</li>\n        </ul>\n\n        <ul class=\"ranking-people\">\n            <li class=\"bold\">Player</li>\n            <li>${rankingValues[mode.toLowerCase()][0].nick}</li>\n            <li>${rankingValues[mode.toLowerCase()][1].nick}</li>\n            <li>${rankingValues[mode.toLowerCase()][2].nick}</li>\n        </ul>\n\n        <ul class=\"ranking-score\">\n            <li class=\"bold\">Answered</li>\n            <li>${rankingValues[mode.toLowerCase()][0].correctAnswers}/${rankingValues[mode.toLowerCase()][0].answers}</li>\n            <li>${rankingValues[mode.toLowerCase()][1].correctAnswers}/${rankingValues[mode.toLowerCase()][1].answers}</li>\n            <li>${rankingValues[mode.toLowerCase()][2].correctAnswers}/${rankingValues[mode.toLowerCase()][2].answers}</li>\n        </ul>\n    \n    `\n\n    fameContainer.appendChild(ranking);\n\n    return fameContainer;\n}\n\nexport default showHallOfFame;","const fameText = {\n    people: \"Mode Ranking (People)\",\n    vehicles: \"Mode Ranking (Vehicles)\",\n    starships: \"Mode Ranking (Starships)\"\n}\n\nexport default fameText;","function img(src) {\n\n    const divImg = document.createElement(\"div\");\n    divImg.className = \"img-container\";\n\n    const img = document.createElement(\"img\");\n    img.setAttribute('src', src);\n    \n    divImg.appendChild(img);\n\n    return divImg;\n}\n\nexport { img }","const imgSrc = {\n    people: '../../../../Projekt-2-quiz/static/assets/img/modes/people/36.jpg',\n    vehicles: '../../../../Projekt-2-quiz/static/assets/img/modes/vehicles/14.jpg',\n    starships: '../../../../Projekt-2-quiz/static/assets/img/modes/starships/10.jpg'\n}\n\nexport default imgSrc;","import gameRules from '../gameRules/gameRules.js';\nimport rulesText from '../gameRules/gameRulesText.js';\nimport gameQuestion from '../question/question.js';\nimport questionText from '../question/questionText.js';\nimport showHallOfFame from '../hallOfFame/hallOfFame.js';\nimport fameText from '../hallOfFame/hallOfFameText.js';\nimport { img } from '../imgContainer/img.js';\nimport imgSrc from '../imgContainer/imgSrc.js'\n\nconst modeChange = () => {\n    const template = document.createElement('template');\n    template.innerHTML = `\n        <style>\n            .menu{\n                background-color: transparent;\n                grid-area: modes-list;\n            }\n            .modes-list{\n                list-style-type: none;\n                display: flex;\n                justify-content: space-around;\n                align-items: center;\n                padding: 0;\n            }\n            \n            .modes-list li{\n                width: 28%;\n                padding: 0;\n                border-radius: 16px;\n                text-align: center;\n                font-family: Montserrat;\n                font-weight: 600;\n                font-size: 1.5rem;\n                line-height: 51px;\n                color: #FFFFFF;\n                background-color: #050018;\n                box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25), 4px 4px 40px rgba(255, 0, 0, 0.9);\n            }\n            \n            .modes-list li.dark{\n                box-shadow: 6px 6px 6px rgba(255, 0, 0, 0.25), 10px 10px 90px #FF0000;\n            }\n            \n            .modes-list li:hover{\n                cursor: pointer;\n            }\n\n            @media only screen and (max-width: 812px) and (orientation: landscape){\n                \n                .modes-list li{\n                    font-size: 1.15em;\n                    line-height: 1.5em;\n                    padding: 5px;\n                    box-sizing: border-box;\n                }\n            }\n            @media only screen and (min-device-width: 320px) and (max-device-width: 480px){\n                \n                .modes-list{\n                    margin: 5px;\n                }\n                .modes-list li{\n                    font-size: 1em;\n                    line-height: 1em;\n                    padding: 5px;\n                }\n            }\n\n        </style>\n        <div class=\"menu\">\n            <ul class=\"modes-list\">\n                <li class=\"dark\">People</li>\n                <li>Vehicles</li>\n                <li>Starships</li>\n            </ul>\n        </div>\n    `;\n\n    class modeChangeComponent extends HTMLElement {\n        constructor(){\n            super();\n\n            this.currentMode = 'People';    //domyślnie wybrany jest tryb People\n\n            this.attachShadow({ mode: 'open'});\n            this.shadowRoot.appendChild(template.content.cloneNode(true));\n        }\n\n        connectedCallback(){\n            const modes = this.shadowRoot.querySelectorAll('li');\n            \n            modes.forEach(mode => {\n                mode.addEventListener('click', (e) => {\n                    this.currentMode = e.target.innerText;\n                  //  alert('Wybrano tryb: ' + this.currentMode);\n                    modes.forEach(mode => mode.classList.remove('dark'));   //usuwamy klasę dark ze wszystkich elementów li\n                    e.target.classList.add('dark');   //dodajemy klasę dark do klikniętego elementu li\n                   \n                    const gameRulesContainer = document.body.querySelector('.rules');\n                    const questionContainer = document.body.querySelector('.title');\n                    const imageContainer = document.body.querySelector('.img-container');\n                    const hallOfFameContainer = document.body.querySelector('.fame-container');\n                    \n\n                    if(!(document.querySelector('.questions'))){\n                        if(gameRulesContainer != null)\n                            document.body.replaceChild(gameRules(rulesText[this.currentMode.toLowerCase()]), gameRulesContainer);\n                        if(hallOfFameContainer != null)\n                            document.body.replaceChild(showHallOfFame(fameText[this.currentMode.toLowerCase()]), hallOfFameContainer);\n                        document.body.replaceChild(gameQuestion(questionText[this.currentMode.toLowerCase()]), questionContainer);\n                        document.body.replaceChild(img(imgSrc[this.currentMode.toLowerCase()]), imageContainer);\n                        }\n\n                    // switch (this.currentMode){\n                    //     case 'People':\n                    //       //console.log(gameRules(rulesText.people));\n                    //       gameQuestion(questionText.people);\n                    //       if(gameRulesContainer != null && !(document.querySelector('.questions')))\n                    //         document.body.replaceChild(gameRules(rulesText.people), gameRulesContainer);\n                    //       if(!(document.querySelector('.questions')))\n                    //         document.body.replaceChild(gameQuestion(questionText.people), questionContainer);\n                    //       if(hallOfFameContainer != null && !(document.querySelector('.questions')))\n                    //         document.body.replaceChild(showHallOfFame(fameText.people), hallOfFameContainer);\n                    //       if(!(document.querySelector('.questions')))\n                    //         document.body.replaceChild(img(imgSrc.people), imageContainer);\n                    //       break;\n                    //     case 'Vehicles':\n                    //       gameRules(rulesText.vehicles);\n                    //       gameQuestion(questionText.vehivles);\n                    //       if(gameRulesContainer != null && !(document.querySelector('.questions')))\n                    //         document.body.replaceChild(gameRules(rulesText.vehicles), gameRulesContainer);\n                    //       if(!(document.querySelector('.questions')))\n                    //         document.body.replaceChild(gameQuestion(questionText.vehicles), questionContainer);\n                    //       if(hallOfFameContainer != null && !(document.querySelector('.questions')))\n                    //         document.body.replaceChild(showHallOfFame(fameText.vehicles), hallOfFameContainer);\n                    //       if(!(document.querySelector('.questions')))\n                    //         document.body.replaceChild(img(imgSrc.vehicles), imageContainer);\n                    //       break;\n                    //     case 'Starships':\n                    //        gameRules(rulesText.starships);\n                    //        gameQuestion(questionText.starships);\n                    //        if(gameRulesContainer != null && !(document.querySelector('.questions')))\n                    //         document.body.replaceChild(gameRules(rulesText.starships), gameRulesContainer);\n                    //        if(!(document.querySelector('.questions')))\n                    //         document.body.replaceChild(gameQuestion(questionText.starships), questionContainer);\n                    //        if(hallOfFameContainer != null && !(document.querySelector('.questions')))\n                    //         document.body.replaceChild(showHallOfFame(fameText.starships), hallOfFameContainer);\n                    //        if(!(document.querySelector('.questions')))\n                    //         document.body.replaceChild(img(imgSrc.starships), imageContainer);\n                    //        break; \n                    // }\n\n                })\n            })\n        }\n\n        getCurrentMode(){\n            return this.currentMode;\n        }\n    }\n\n    window.customElements.define('mode-change', modeChangeComponent);\n}\n\n// modeChange();\n\nexport default modeChange;","import gameRules from \"../gameRules/gameRules.js\";\nimport rulesText from \"../gameRules/gameRulesText.js\";\nimport hallOfFameButton from \"../buttons/hallOfFameBtn.js\";\n\nfunction rulesButton(){\n\n    const btn = document.createElement('button');\n    btn.classList.add('hall-of-fame-btn');\n    btn.appendChild(document.createTextNode('Rules'));\n    \n    const currentMode = document.querySelector('mode-change').getCurrentMode();\n    btn.addEventListener('click', () => {\n        document.body.replaceChild(gameRules(rulesText[currentMode.toLowerCase()]), document.querySelector('.fame-container'));\n        document.body.replaceChild(hallOfFameButton(), document.querySelector('.yellow-button'));\n    })\n    return btn;\n}\n\nexport default rulesButton;","import showHallOfFame from '../hallOfFame/hallOfFame.js'\nimport fameText from '../hallOfFame/hallOfFameText.js';\nimport rulesButton from '../buttons/rulesBtn.js';\n\nfunction hallOfFameButton(){\n\n    const yellowButtonContainer = document.createElement(\"div\");\n    yellowButtonContainer.className = \"yellow-button\";\n\n    const btn = document.createElement('button');\n    btn.classList.add('hall-of-fame-btn');\n    btn.appendChild(document.createTextNode('Hall of Fame'));\n\n    yellowButtonContainer.appendChild(btn);\n\n    const currentMode = document.querySelector('mode-change').getCurrentMode();\n\n    \n    btn.addEventListener('click', () => {\n        \n        document.body.replaceChild(showHallOfFame(fameText[currentMode.toLowerCase()]), document.querySelector('.rules'));\n      \n        yellowButtonContainer.replaceChild(rulesButton(), btn);\n    \n    })\n    return yellowButtonContainer;\n}\n\nexport default hallOfFameButton;","function redButton (text) {\n\n    const redButtonContainer = document.createElement(\"div\");\n    redButtonContainer.className = \"red-button\";\n\n    const redButtonText = document.createElement(\"p\")\n    redButtonText.innerHTML = text;\n\n    redButtonContainer.appendChild(redButtonText);\n\n    return redButtonContainer\n}\n\nexport default redButton;","function logo() {\n\n    const divLogo = document.createElement(\"div\");\n    divLogo.className = \"logo\";\n  \n    const imgLogo = document.createElement(\"img\");\n    // const src = \"../../../static/assets/ui/StarWarsLogo.png\";\n    const src = \"../../../../Projekt-2-quiz/static/assets/ui/StarWarsLogo.png\";\n    imgLogo.setAttribute('src', src);\n    \n    // reload:\n    function reload() {\n        reload = location.reload();\n    }\n    \n    imgLogo.addEventListener(\"click\", reload);\n    \n    divLogo.appendChild(imgLogo)\n\n    return divLogo;\n}\n\nexport default logo;","import gameRules from '../gameRules/gameRules.js';\nimport modeChange from '../modeChange/modeChange.js';\nimport gameQuestion from '../question/question.js';\n\nimport rulesText from '../gameRules/gameRulesText.js';\nimport questionText from '../question/questionText.js';\n\n\nimport hallOfFameButton from '../buttons/hallOfFameBtn.js';\nimport { img } from '../imgContainer/img.js';\nimport redButton from '../redButton/redButton.js';\nimport logo from '../logoStarWars/logo.js';\n\n\nexport const mainMenu = () => {\n    modeChange();\n    document.body.appendChild(gameQuestion(questionText.people));\n    document.body.appendChild(gameRules(rulesText.people));\n    document.body.appendChild(img('../../../../Projekt-2-quiz/static/assets/img/modes/people/36.jpg'));\n    document.body.appendChild(redButton(\"PLAY THE GAME\"));\n    document.body.appendChild(hallOfFameButton());\n    document.body.appendChild(logo());\n}\n\n// mainMenu();","import generadeRandomQuestions from '../components/generateQuestion/generateQuestion.js';\nimport { cpu } from '../components/playerCPU/playerCPU.js';\nimport { mainMenu } from '../components/mainMenu/mainMenu.js';\n\nexport const App = ({ options }) => {\n  mainMenu();\n  const playGameButton = document.querySelector('.red-button');\n  // const hallOfGame = document.querySelector('.hall-of-fame-btn');\n  playGameButton.addEventListener('click', () => {\n    // block item after start the game\n    const getModeMenu = document.querySelector(\"mode-change\");\n    const ModeItems = getModeMenu.shadowRoot.lastElementChild;\n    ModeItems.setAttribute(\"style\", \"pointer-events: none\");\n\n    const yellowButton = document.querySelector('.yellow-button');\n\n    playGameButton.classList.add('display-none');\n    yellowButton.classList.add('display-none');\n    // yellowButton.style.display = 'none';\n    // hallOfGame.classList.add('display-none');\n    cpu.restoreDefault();\n    generadeRandomQuestions(true);\n\n  });\n};\n","import {App} from \"./app/App.js\";\n\nconst ONE_SECOND_MILLIS = 1000;\nconst SW_API_BASE_URL = \"https://swapi.dev/api\";\nconst QUIZ_MAX_TIME = 120 * ONE_SECOND_MILLIS;\n\nwindow.onload = () => App({options: {swApiBaseUrl: SW_API_BASE_URL, quizMaxTime: QUIZ_MAX_TIME}})\n"]}